name: Deploy Admin to R2

on:
  push:
    branches:
      - main
    paths:
      - 'admin/**'
      - '!vendor/**'
      - '!customer/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./admin

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Vite project
        run: yarn build

      - name: Install Wrangler CLI + jq
        run: |
          npm install -g wrangler
          sudo apt-get install -y jq

      - name: Clean R2 bucket before upload
        run: |
          # List all objects and delete them one by one
          wrangler r2 object list rentpe-admin --prefix "" --json | \
          jq -r '.objects[] | .key' | \
          xargs -I {} wrangler r2 object delete rentpe-admin "{}"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Upload latest dist to R2
        run: |
          # Verify dist directory exists and contains files
          echo "Contents of dist directory:"
          ls -la dist/
    
          # Upload each file individually with proper paths
          cd dist
          find . -type f | while read file; do
            echo "Uploading: $file"
            # Remove leading './' from path
            key="${file#./}"
            wrangler r2 object put "rentpe-admin/$key" --file "$file"
            
            # Verify upload succeeded
            if [ $? -ne 0 ]; then
              echo "❌ Failed to upload $file"
              exit 1
            fi
            echo "✅ Uploaded $file"
          done
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}