name: Deploy Admin to R2

on:
  push:
    branches:
      - main
    paths:
      - 'admin/**'
      - '!vendor/**'
      - '!customer/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./admin

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          # Remove package-lock.json to avoid conflicts
          rm -f package-lock.json
          yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Install Wrangler and jq
        run: |
          npm install -g wrangler@latest
          sudo apt-get install -y jq

      - name: Clean R2 bucket
        run: |
          wrangler r2 object list rentpe-admin --json | \
          jq -r '.objects[] | .key' | \
          while read -r key; do
            wrangler r2 object delete rentpe-admin "$key" --remote
          done
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Upload to R2
        run: |
          cd dist
          find . -type f | while read file; do
            key="${file#./}"
            echo "Uploading $file as $key"
            wrangler r2 object put "rentpe-admin/$key" --file "$file" --remote
          done
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Verify upload
        run: |
          wrangler r2 object list rentpe-admin --json | jq
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}